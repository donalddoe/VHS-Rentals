{"version":3,"sources":["./src/app/rent-movie/rent-movie.component.ts","./src/app/rent-movie/rent-movie.component.html","./src/app/movie.service.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/edit-movie.service.ts","./src/app/get-movies.service.ts","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/Admins/movie-details/movie-details.component.ts","./src/app/Admins/movie-details/movie-details.component.html","./src/app/add-user/add-user.component.ts","./src/app/add-user/add-user.component.html","./src/environments/environment.ts","./src/app/store-front/store-front.component.ts","./src/app/store-front/store-front.component.html","./src/app/Admins/administration/administration.component.ts","./src/app/Admins/administration/administration.component.html","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.component.html","./src/app/omdbapi.service.ts","./src/app/edit-user/edit-user.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/Admins/customer/customer.component.ts","./src/app/Admins/customer/customer.component.html","./src/app/Admins/add-movies/add-movies.component.ts","./src/app/Admins/add-movies/add-movies.component.html","./src/app/save-movies.service.ts","./src/app/screens/register/register.component.ts","./src/app/screens/register/register.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/edit-rental/edit-rental.component.ts","./src/app/edit-rental/edit-rental.component.html","./src/app/delete-record/delete-record.component.ts","./src/app/delete-record/delete-record.component.html","./src/app/edit-wallet/edit-wallet.component.ts","./src/app/edit-wallet/edit-wallet.component.html","./src/app/app.module.ts","./src/app/users/returns/returns.component.ts","./src/app/users/returns/returns.component.html","./src/app/login.service.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/screens/no-page-found/no-page-found.component.ts","./src/app/screens/no-page-found/no-page-found.component.html","./src/app/delete-movie.service.ts","./src/app/screens/login/login.component.ts","./src/app/screens/login/login.component.html","./src/app/register.service.ts","./src/app/check-out/check-out.component.ts","./src/app/check-out/check-out.component.html","./src/app/Admins/rentals/rentals.component.ts","./src/app/Admins/rentals/rentals.component.html","./src/app/Admins/movies/movies.component.ts","./src/app/Admins/movies/movies.component.html","./src/app/add-rental/add-rental.component.ts","./src/app/add-rental/add-rental.component.html","./src/app/angular-material.module.ts","./src/app/loader/interceptor.service.ts","./src/app/loader/loader.service.ts","./src/app/auth.guard.ts","./src/app/edit-movie/edit-movie.component.ts","./src/app/edit-movie/edit-movie.component.html","./src/app/app-routing.module.ts","./src/app/rental.service.ts","./src/app/user.service.ts","./src/app/rentals.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MovieService } from '../movie.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-rent-movie',\r\n  templateUrl: './rent-movie.component.html',\r\n  styleUrls: ['./rent-movie.component.scss']\r\n})\r\nexport class RentMovieComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef:MatDialogRef<RentMovieComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private getMovie: MovieService\r\n  ) { }\r\n  movie\r\n  ngOnInit(): void {\r\n    this.movie = this.data\r\n  }\r\n  addToCart() {\r\n    let cart = []\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n      cart.push(this.movie)\r\n    } else {\r\n      cart.push(this.movie)\r\n    }\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\r\n\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Movie has been added to your shoping cart',\r\n      showConfirmButton: false,\r\n      timer: 4000\r\n    })\r\n    this.dialogRef.close()\r\n  }\r\n\r\n}\r\n","<div class=\"main\" >\r\n  <mat-card *ngIf=\"movie\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <h1>{{movie.title}}</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>{{movie.genre}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n    <section id=\"card-details\">\r\n      <span id=\"poster\">\r\n        <img mat-card-image src=\"{{movie.poster}}\" alt=\"{{movie.title}}\">\r\n      </span>\r\n\r\n      <section id=\"movie-details\">\r\n        <mat-card-content>\r\n\r\n          <dl>\r\n            <dt>Plot:</dt>\r\n            <dd>{{movie.plot}}</dd>\r\n\r\n\r\n            <dt>Genre:</dt>\r\n            <dd>{{movie.genre}}</dd>\r\n\r\n            <dt>Number in stock:</dt>\r\n            <dd>{{movie.numberInStock}}</dd>\r\n\r\n            <dt>Daily Rental Rate:</dt>\r\n            <dd>&#8373; {{movie.dailyRentalRate}}</dd>\r\n          </dl>\r\n\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\" (click)=\"addToCart()\">Rent for &#8373; {{movie.dailyRentalRate}}\r\n          </button>\r\n        </mat-card-actions>\r\n      </section>\r\n    </section>\r\n  </mat-card>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\n  private url = \"https://vhsrentals.herokuapp.com/api/movies/single-movie/\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  fetchMovie(id) {\r\n    return this.http.get(this.url+id,  this.httpOptions)\r\n  };\r\n}\r\n\r\n","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { UserService } from '../user.service';\r\nimport { DeleteRecordComponent } from 'src/app/delete-record/delete-record.component';\r\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { EditUserComponent } from '../edit-user/edit-user.component';\r\nimport { RegisterComponent } from '../screens/register/register.component';\r\nimport { AddUserComponent } from '../add-user/add-user.component';\r\nimport { LoaderService } from '../loader/loader.service';\r\n\r\nexport interface UserData {\r\n  username: string\r\n  email: string\r\n  date: string\r\n  isAdmin: boolean\r\n  _id: string\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  users\r\n  ngOnInit(): void {\r\n    this.setUpTable()\r\n  }\r\n  setUpTable() {\r\n    this.userservice.fetchUsers().subscribe(response => {\r\n      this.users = response\r\n      this.dataSource = new MatTableDataSource(this.users);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n  displayedColumns: string[] = ['username', 'email', 'date', 'isAdmin','wallet','delete', 'edit'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private userservice: UserService,\r\n    public dialog: MatDialog,\r\n    public loaderService: LoaderService,\r\n\r\n  ) {\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  deleteUser(id) {\r\n    let openDialog = this.dialog.open(DeleteRecordComponent)\r\n    this.dialog.getDialogById(openDialog.id).afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.userservice.deleteUser(id).subscribe(() =>\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'User has been deleted',\r\n            showConfirmButton: false,\r\n            timer: 4000\r\n          })\r\n        )\r\n        this.setUpTable()\r\n      }\r\n    })\r\n  }\r\n\r\n  editUser(user) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = user\r\n    this.dialog.afterAllClosed.subscribe(() => { this.setUpTable() })\r\n    this.dialog.open(EditUserComponent, dialogConfig)\r\n  }\r\n  onAddNew() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    this.dialog.afterAllClosed.subscribe(() => { this.setUpTable() })\r\n    this.dialog.open(AddUserComponent, dialogConfig)\r\n  }\r\n\r\n}\r\n","<app-administration>\r\n  <div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n  <main>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n  <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Enter search query here\" #input>\r\n    <button mat-raised-button color=\"primary\" (click) =\"onAddNew()\" >\r\n      <mat-icon >add</mat-icon>\r\n      New User\r\n    </button>\r\n  </mat-form-field>\r\n  \r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <ng-container matColumnDef=\"username\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"isAdmin\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Admin </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.isAdmin}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"wallet\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Wallet (&#8373;) </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.wallet}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Registered </th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.date}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n      <td mat-cell *matCellDef=\"let row\"> <button mat-flat-button  (click)=\"editUser(row)\">\r\n          <mat-icon color=\"primary\">edit</mat-icon>\r\n        </button> </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete </th>\r\n      <td mat-cell *matCellDef=\"let row\"> <button mat-flat-button  (click)=\"deleteUser(row._id)\">\r\n          <mat-icon color=\"warn\">delete</mat-icon>\r\n        </button> </td>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n</main>\r\n</app-administration>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditMovieService {\r\nprivate url =\"https://vhsrentals.herokuapp.com/api/movies/update-movie/\"\r\nhttpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n    'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n  })\r\n};\r\nconstructor(private http: HttpClient) { }\r\neditMovies(id,formData) {\r\n  return this.http.put(this.url+id,formData,this.httpOptions,)\r\n};\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetMoviesService {\r\n\r\n  private url = \"https://vhsrentals.herokuapp.com/api/movies/\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  fetchMovies() {\r\n    return this.http.get(this.url,  this.httpOptions)\r\n  };\r\n}\r\n\r\n","import { Component, OnInit,Output, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n// import { LoginService } from 'src/app/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\nwallet = null; \r\n  constructor(\r\n    // private auth: AuthService, \r\n    private router: Router\r\n  ) {\r\n    this.router.events.subscribe((val) => {\r\n      if (val instanceof NavigationEnd) {\r\n        const userCredential = localStorage.getItem('wallet');\r\n        if(userCredential) {\r\n          const wallet = userCredential;\r\n          this.wallet = wallet;\r\n        }\r\n      }\r\n    })\r\n   }\r\n  \r\n  getNumberOfItemsInCart() {\r\n    let cart=[]\r\n    if(localStorage.getItem(\"cart\")){\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n\r\n    }\r\n    return cart.length\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar  class='mat-elevation-z8'>\r\n    <span>VHS Rentals</span>\r\n    <div class=\"spacer\"></div>\r\n    <a mat-button routerLink='/store'>Movies</a>\r\n    <a mat-button routerLink='/users'>Rentals</a>\r\n    <a mat-button routerLink='/shopping-cart'>\r\n        Shopping Cart\r\n        <mat-icon matBadge=\"{{getNumberOfItemsInCart()}}\" matBadgeColor=\"primary\">shopping_cart</mat-icon>\r\n    </a>\r\n    <div [ngSwitch]=\"wallet\">\r\n        <div *ngSwitchCase=\"wallet\">\r\n            <button mat-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon class=\"wallet\" matBadgeColor=\"primary\" matBadge=\"{{wallet}}\">account_balance_wallet</mat-icon>\r\n            <mat-icon color= \"accent\">more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"logout()\">\r\n                    <mat-icon >logout</mat-icon>\r\n                    <span color='primary' routerLink=\"/login\">Logout</span>\r\n                </button>\r\n            </mat-menu>\r\n        </div>\r\n        <a *ngSwitchDefault mat-button color='primary' routerLink=\"logout\"></a>\r\n    </div>\r\n    </mat-toolbar>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MovieService } from 'src/app/movie.service';\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { EditMovieComponent } from 'src/app/edit-movie/edit-movie.component';\r\nimport { DeleteRecordComponent } from 'src/app/delete-record/delete-record.component';\r\nimport { DeleteMovieService } from 'src/app/delete-movie.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-movie-details',\r\n  templateUrl: './movie-details.component.html',\r\n  styleUrls: ['./movie-details.component.scss']\r\n})\r\nexport class MovieDetailsComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute,\r\n    private getMovies: MovieService,\r\n    private deleteMovies: DeleteMovieService,\r\n    public loaderService: LoaderService,\r\n    public dialog: MatDialog,\r\n  ) { }\r\n\r\n\r\n  confirmDelete() {\r\n\r\n    let openDialog = this.dialog.open(DeleteRecordComponent)\r\n    this.dialog.getDialogById(openDialog.id).afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleteMovies.deleteMovie(this.movie._id).subscribe(()=>\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Movie has been deleted',\r\n            showConfirmButton: false,\r\n            timer: 4000\r\n          })\r\n        )\r\n        this.router.navigate(['/movies']);\r\n     }\r\n    })\r\n\r\n  }\r\n  editMovie(): void {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = this.movie\r\n    this.dialog.afterAllClosed.subscribe(() => { this.getMovie(this.movie._id) })\r\n    this.dialog.open(EditMovieComponent, dialogConfig)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const id = params.get(\"id\")\r\n      this.getMovie(id)\r\n\r\n    })\r\n  }\r\n  movie\r\n  getMovie(id) {\r\n    this.getMovies.fetchMovie(id).subscribe(response => { this.movie = response })\r\n  }\r\n\r\n\r\n\r\n}\r\n","<app-administration>\r\n<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n\r\n<main *ngIf=\"movie\">\r\n    <mat-card >\r\n    <mat-card-header>\r\n      <mat-card-title><h1>{{movie.title}}</h1></mat-card-title>\r\n      <mat-card-subtitle>{{movie.genre}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n<section id =\"card-details\">\r\n    <span id=\"poster\">\r\n        <img mat-card-image src=\"{{movie.poster}}\" alt=\"{{movie.title}}\">\r\n    </span>\r\n\r\n    <section id=\"movie-details\">\r\n    <mat-card-content>\r\n          \r\n<dl>\r\n    <dt>Plot:</dt>\r\n    <dd>{{movie.plot}}</dd>\r\n\r\n    \r\n    <dt>Genre:</dt>\r\n    <dd>{{movie.genre}}</dd>\r\n\r\n    <dt>Number in stock:</dt>\r\n    <dd>{{movie.numberInStock}}</dd>\r\n\r\n    <dt>Daily Rental Rate:</dt>\r\n    <dd>{{movie.dailyRentalRate}}</dd>\r\n</dl>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"warn\"  (click)=\"confirmDelete()\">Delete</button>\r\n      <button mat-raised-button color=\"accent\" (click)=\"editMovie()\"> Edit</button>\r\n    </mat-card-actions>\r\n</section>\r\n</section>\r\n  </mat-card>\r\n</main>\r\n</app-administration>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { RegisterService } from '../register.service';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  constructor(private service:RegisterService,\r\n    public dialogRef:MatDialogRef<AddUserComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit(){\r\n    this.disableConfirmPassword()\r\n    // let data = this.formatDataForEndPoint();\r\n    this.service.register(this.form.value).subscribe(\r\n      response => {\r\n        // this.openDialog()\r\n        console.log(response)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'New user added',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        })\r\n       \r\n       \r\n      }, (error: Response) => {\r\n        // this.dialog.open(FormErrorComponent,{data:{message:\"test\"}})\r\n        if (error.status === 404) {\r\n          alert(\"Signup unsuccessful \")\r\n        } else {\r\n          if (error.status === 201) {\r\n            this.form.setErrors(error.json())\r\n          } else {\r\n            alert('An unexpected error occurred:' + error)\r\n          }\r\n        }\r\n\r\n      })\r\n      this.form.reset() \r\n      this.onClose()\r\n  }\r\n  onClose(){\r\n    this.form.reset()\r\n    this.dialogRef.close()\r\n  }\r\n  disableConfirmPassword() {\r\n    this.form.get('confirmpassword').disable({ onlySelf: true });\r\n    this.form.updateValueAndValidity();\r\n  }\r\n  form = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.email,\r\n      Validators.minLength(5)\r\n    ]),\r\n    username: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5)\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      Validators.pattern(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]))/g)\r\n      //at least 1 digit ,at least one lowercase char , at lease 1 uppercase char and one special char\r\n    ]),\r\n    confirmpassword: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      Validators.pattern(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]))/g)\r\n      //at least 1 digit ,at least one lowercase char , at lease 1 uppercase char and one special char\r\n    ]),\r\n    isAdmin: new FormControl('true', [\r\n      Validators.required,\r\n    ]),\r\n    wallet: new FormControl('true', [\r\n      Validators.required,\r\n      Validators.min(0)\r\n    ]),\r\n  })\r\n\r\n  get email() {\r\n    return this.form.get('email')\r\n  }\r\n  get username() {\r\n    return this.form.get('username')\r\n  }\r\n  get password() {\r\n    return this.form.get('password')\r\n  }\r\n  get confirmpassword() {\r\n    return this.form.get('confirmpassword')\r\n  }\r\n  get isAdmin() {\r\n    return this.form.get('isAdmin')\r\n  }\r\n  get wallet() {\r\n    return this.form.get('wallet')\r\n  }\r\n}\r\n","    <mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n        <mat-card-title>Add User</mat-card-title>\r\n\r\n        <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput type=\"email\" formControlName=\"email\" placeholder=\"Email:\" required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"email.touched && email.invalid\">\r\n                <mat-error *ngIf=\"email.errors.required\">\r\n                    Email is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.errors.email\">\r\n                    Email must have a valid format\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.errors.minlength\">\r\n                    Email must be {{email.errors.minlength.requiredLength}} characters or\r\n                    more\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput placeholder=\"Username:\" formControlName=\"username\"  required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"username.touched && username.invalid\">\r\n                <mat-error *ngIf=\"username.errors.required\">\r\n                    Username is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.errors.minlength\">\r\n                    Username must be {{username.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <mat-radio-group aria-label=\"Select an option\">\r\n                <mat-radio-button checked value=\"true\">Admin</mat-radio-button>\r\n                <mat-radio-button value=\"false\">Customer</mat-radio-button>\r\n              </mat-radio-group>\r\n              <mat-error *ngIf=\"isAdmin.touched && isAdmin.invalid\">\r\n                <mat-error *ngIf=\"isAdmin.errors.required\">\r\n                    Is the user an admin?\r\n                </mat-error>\r\n            </mat-error>\r\n            \r\n            <mat-form-field appearance='outline' >\r\n                <input matInput placeholder=\"Wallet:\" formControlName=\"wallet\" type=\"number\" required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"wallet.touched && wallet.invalid\">\r\n                <mat-error *ngIf=\"wallet.errors.required\">\r\n                    wallet is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"wallet.errors.min\">\r\n                Ammount must be greater than {{wallet.errors.min.min}} \r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput placeholder=\"Password:\" formControlName=\"password\" required type=\"password\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"password.touched && password.invalid\">\r\n                <mat-error *ngIf=\"password.errors.required\">\r\n                    Password is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.errors.minlength\">\r\n                    Password must be {{password.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.errors.pattern\">\r\n                    <p>\r\n                        Password must contain at least one digit.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one lowercase letter.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one uppercase letter.\r\n                    </p>\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"password.touched && confirmpassword.touched && confirmpassword.value !== password.value\">\r\n                <mat-error>\r\n                    Passwords should match\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput placeholder=\"Password (confirm):\" formControlName=\"confirmpassword\" required\r\n                    type=\"password\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"confirmpassword.touched && confirmpassword.invalid\">\r\n                <mat-error *ngIf=\"confirmpassword.errors.required\">\r\n                    Confirmation password is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"confirmpassword.errors.minlength\">\r\n                    Password must be {{confirmpassword.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n                <mat-error *ngIf=\"confirmpassword.errors.pattern\">\r\n                    <p>\r\n                        Password must contain at least one digit.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one lowercase letter.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one uppercase letter.\r\n                    </p>\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"password.touched && confirmpassword.touched && confirmpassword.value !== password.value\">\r\n                <mat-error>\r\n                    Passwords should match\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Add New User</button>\r\n        </form>\r\n    </mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { TooltipPosition } from '@angular/material/tooltip';\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { GetMoviesService } from '../get-movies.service';\r\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RentMovieComponent } from '../rent-movie/rent-movie.component';\r\nimport Swal from 'sweetalert2';\r\nimport { MovieService } from '../movie.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-store-front',\r\n  templateUrl: './store-front.component.html',\r\n  styleUrls: ['./store-front.component.scss']\r\n})\r\nexport class StoreFrontComponent implements OnInit {\r\n\r\n  constructor(\r\n    private getMovies: GetMoviesService,\r\n    public loaderService: LoaderService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private getMovie: MovieService\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getMovies.fetchMovies().subscribe(response => { this.movies = response, this.getList(0, 11) })\r\n  }\r\n  list = []\r\n  movies;\r\n  length = 100;\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  pageEvent: PageEvent;\r\n  positionOptions: TooltipPosition[] = ['below', 'above', 'left', 'right'];\r\n  position = new FormControl(this.positionOptions[1]);\r\n  onPageEvent(event: PageEvent) {\r\n    const start = event.previousPageIndex * event.pageSize + 1\r\n    const limit = event.pageSize\r\n    this.getList(start, limit)\r\n  }\r\n  hasEnoughFunds(price): boolean {\r\n    if (parseFloat(localStorage.getItem(\"wallet\")) >= price) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  setDailyRentalDisplayClass(price):string{\r\n    console.log(price)\r\n    console.log(this.hasEnoughFunds(price))\r\n    if(this.hasEnoughFunds(price)){\r\n      return \"footer-text\";\r\n    }else{\r\n      return \"footer-text-red\";\r\n    }\r\n  }\r\n  goToMovie(id) {\r\n    let movie\r\n    this.getMovie.fetchMovie(id).subscribe(response => {\r\n      movie = response\r\n      const dialogConfig = new MatDialogConfig();\r\n      dialogConfig.data = movie\r\n      let openDialog = this.dialog.open(RentMovieComponent, dialogConfig)\r\n      this.dialog.getDialogById(openDialog.id).afterClosed().subscribe(result => {\r\n        if (result) {\r\n          // this.deleteMovies.deleteMovie(this.movie._id).subscribe(()=>\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Movie has been deleted',\r\n            showConfirmButton: false,\r\n            timer: 4000\r\n          })\r\n\r\n        }\r\n      })\r\n\r\n    })\r\n\r\n\r\n  }\r\n  getList(start: number, limit: number) {\r\n    let row = 1\r\n    let col = 1\r\n    let array = Object.values(this.movies)\r\n    this.length = array.length\r\n    this.list = []\r\n    for (let index = start; index < array.length && index <= limit; index++) {\r\n      this.list.push({ rows: row, cols: col, data: array[index] })\r\n      if (index % 3 == 0) {\r\n        row++\r\n      }\r\n      col = (col++) % 3\r\n    }\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n\r\n    <mat-grid-list *ngIf=\"list\" cols=\"3\" rowHeight=\"60em\" [style.backgroundColor]=\"'lightgray'\">\r\n      <mat-grid-tile \r\n      *ngFor=\"let movieDetails of list\"\r\n       [colspan]=\"movieDetails.cols\"\r\n        gutterSize=\"1px\"\r\n        > \r\n\r\n        <mat-card  *ngIf=\"movieDetails\" class=\"movie-details\">\r\n          <mat-card-header>\r\n            <mat-card-title> <span class=\"header-title\">{{movieDetails.data.title}}</span></mat-card-title>\r\n            <mat-card-subtitle>{{movieDetails.data.genre}}</mat-card-subtitle>\r\n          </mat-card-header>\r\n          <img \r\n          mat-card-image src=\"{{movieDetails.data.poster}}\"\r\n          alt=\"{{movieDetails.data.title}}\" \r\n          (click)=\"goToMovie(movieDetails.data._id)\"\r\n          >\r\n          <mat-card-actions class =\"card-footer\">\r\n                <button mat-button disabled=\"{{(movieDetails.data.count < 1 ? true: false) || !hasEnoughFunds(movieDetails.data.dailyRentalRate) }}\" >\r\n                   <span class=\"{{setDailyRentalDisplayClass(movieDetails.data.dailyRentalRate)}}\" >&#8373; {{movieDetails.data.dailyRentalRate | number }} </span> per day <span class=\"footer-text\"> ({{movieDetails.data.numberInStock}} copies available for renting)</span> \r\n                  </button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n   \r\n  \r\n\r\n      </mat-grid-tile>\r\n    \r\n    </mat-grid-list>\r\n \r\n    <mat-paginator *ngIf=\"list\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n    (page)=\"onPageEvent($event)\"\r\n    (change)=\"onPageEvent($event)\">\r\n    </mat-paginator>\r\n\r\n  \r\n    <!-- <app-footer></app-footer> -->\r\n\r\n    ","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LoaderService } from 'src/app/loader/loader.service';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent implements OnInit {\n\n  username = null;\n  isTokenExpired = true;\n\n  ngOnInit(): void {\n  }\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\nconstructor(private breakpointObserver: BreakpointObserver,  public loaderService: LoaderService) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n        [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n        [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n        [opened]=\"(isHandset$ | async) === false\">\r\n      <mat-toolbar>\r\n        <mat-icon>dashboard</mat-icon> Dashboard\r\n      </mat-toolbar>\r\n      <mat-nav-list>\r\n        <mat-list-item [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon>movie</mat-icon>\r\n          <a matline >Movies</a>\r\n      </mat-list-item>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item routerLink=\"/add-movies\" >Add Movie</button>\r\n        <button mat-menu-item routerLink=\"/movies\" >Movies</button>\r\n      </mat-menu>\r\n      <!-- <a mat-list-item routerLink=\"/add-users\">\r\n        <mat-icon>person</mat-icon>\r\n        Add Users\r\n      </a> -->\r\n      <a mat-list-item routerLink=\"/view-users\">\r\n        <mat-icon>person</mat-icon> \r\n        Users\r\n      </a>\r\n      <a mat-list-item routerLink=\"/wallet\">\r\n        <mat-icon>account_balance_wallet</mat-icon>\r\n        Wallet\r\n      </a>\r\n        <a mat-list-item routerLink=\"/rentals\">\r\n          <mat-icon>library_books</mat-icon>\r\n          Rentals\r\n        </a>\r\n      \r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      <mat-toolbar color=\"primary\">\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"Toggle sidenav\"\r\n          mat-icon-button\r\n          (click)=\"drawer.toggle()\"\r\n          *ngIf=\"isHandset$ | async\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <span>VHS-Rental Admin Dashboard</span>\r\n        <div class=\"spacer\"></div>\r\n        <div [ngSwitch]=\"isTokenExpired\">\r\n          <div *ngSwitchCase=\"false\">\r\n              <button mat-button [matMenuTriggerFor]=\"menu\">\r\n              Hi, {{username}}!<mat-icon>more_vert</mat-icon>\r\n              </button>\r\n              <mat-menu #menu=\"matMenu\">\r\n                  <button mat-menu-item (click)=\"logout()\">\r\n                      <mat-icon>logout</mat-icon>\r\n                      <span>Logout</span>\r\n                  </button>\r\n              </mat-menu>\r\n          </div>\r\n          <a *ngSwitchDefault mat-button routerLink=\"/login\"><mat-icon matPrefix>account_circle</mat-icon>Log out</a>\r\n      </div>\r\n      </mat-toolbar>\r\n      <div id='content'>\r\n        <div> \r\n          <ng-content></ng-content> \r\n    </div>    \r\n          </div>\r\n       <router-outlet></router-outlet> \r\n<app-footer></app-footer>\r\n\r\n      <!-- Add Content Here -->\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n  ","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { UserService } from '../user.service';\r\nimport { DeleteRecordComponent } from 'src/app/delete-record/delete-record.component';\r\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { EditUserComponent } from '../edit-user/edit-user.component';\r\nimport { RegisterComponent } from '../screens/register/register.component';\r\nimport { AddUserComponent } from '../add-user/add-user.component';\r\nimport { LoaderService } from '../loader/loader.service';\r\nimport { EditWalletComponent } from '../edit-wallet/edit-wallet.component';\r\n\r\nexport interface UserData {\r\n  username: string\r\n  email: string\r\n  date: string\r\n  isAdmin: boolean\r\n  _id: string\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-wallet',\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.scss']\r\n})\r\nexport class WalletComponent implements OnInit {\r\n  users\r\n  ngOnInit(): void {\r\n    this.setUpTable()\r\n  }\r\n  setUpTable() {\r\n    this.userservice.fetchUsers().subscribe(response => {\r\n      this.users = response\r\n      this.dataSource = new MatTableDataSource(this.users);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n  displayedColumns: string[] = ['username','wallet','edit'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private userservice: UserService,\r\n    public dialog: MatDialog,\r\n    public loaderService: LoaderService,\r\n\r\n  ) {\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  deleteUser(id) {\r\n    let openDialog = this.dialog.open(DeleteRecordComponent)\r\n    this.dialog.getDialogById(openDialog.id).afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.userservice.deleteUser(id).subscribe(() =>\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'User has been deleted',\r\n            showConfirmButton: false,\r\n            timer: 4000\r\n          })\r\n        )\r\n        this.setUpTable()\r\n      }\r\n    })\r\n  }\r\n\r\n  editUser(user) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = user\r\n    this.dialog.afterAllClosed.subscribe(() => { this.setUpTable() })\r\n    this.dialog.open(EditWalletComponent, dialogConfig)\r\n  }\r\n  onAddNew() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    this.dialog.afterAllClosed.subscribe(() => { this.setUpTable() })\r\n    this.dialog.open(AddUserComponent, dialogConfig)\r\n  }\r\n\r\n}\r\n","<app-administration>\r\n    <div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    <main>\r\n  \r\n  <div class=\"mat-elevation-z8\">\r\n    <mat-form-field>\r\n      <mat-label>Filter</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Enter search query here\" #input>\r\n\r\n    </mat-form-field>\r\n    \r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <ng-container matColumnDef=\"username\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.username}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"wallet\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Wallet (&#8373;) </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.wallet}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n        <td mat-cell *matCellDef=\"let row\"> <button mat-flat-button  (click)=\"editUser(row)\">\r\n            <mat-icon color=\"primary\">edit</mat-icon>\r\n          </button> </td>\r\n      </ng-container>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  \r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n  </main>\r\n  </app-administration>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OmdbapiService {\r\n  private url = \"http://www.omdbapi.com/?t=\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  find(movieTitle): Observable<any> {\r\n    return this.http.get(this.url+ movieTitle+\"&apikey=5ccdc80e\")\r\n  };\r\n\r\n}\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.scss']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef:MatDialogRef<EditUserComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private userservice:UserService  \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.email.setValue(this.data.email)\r\n    this.username.setValue(this.data.username)\r\n    this.isAdmin.setValue(this.data.isAdmin)\r\n    this.wallet.setValue(this.data.wallet)\r\n  }\r\n  form = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.email,\r\n      Validators.minLength(5)\r\n    ]),\r\n    username: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5)\r\n    ]),\r\n    isAdmin: new FormControl('false', [\r\n      Validators.required, \r\n    ]),\r\n    wallet: new FormControl('false', [\r\n      Validators.required,\r\n      Validators.min(0) \r\n    ]),\r\n  })\r\n \r\n  get email() {\r\n    return this.form.get('email')\r\n  }\r\n  get username() {\r\n    return this.form.get('username')\r\n  }\r\n  get isAdmin() {\r\n    return this.form.get('isAdmin')\r\n  }\r\n  get wallet() {\r\n    return this.form.get('wallet')\r\n  }\r\n  onUpdate(){\r\n    this.userservice.updateUser(this.data._id,this.form.value).subscribe(response=>{\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'User details have been edited',\r\n        showConfirmButton: false,\r\n        timer: 4000\r\n        })\r\n    \r\n    })\r\n    this.form.reset() \r\n    this.onClose()\r\n  }\r\n  onClose(){\r\n    this.form.reset()\r\n    this.dialogRef.close()\r\n  }\r\n}\r\n","\r\n\r\n<main class=\"container\">\r\n    <mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n        <mat-card-title> Edit User</mat-card-title>\r\n\r\n        <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onUpdate()\">\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput type=\"email\" formControlName=\"email\" placeholder=\"Email:\" required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"email.touched && email.invalid\">\r\n                <mat-error *ngIf=\"email.errors.required\">\r\n                    Email is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.errors.email\">\r\n                    Email must have a valid format\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.errors.minlength\">\r\n                    Email must be {{email.errors.minlength.requiredLength}} characters or\r\n                    more\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-radio-group aria-label=\"Select an option\">\r\n                <mat-radio-button [checked]=\"isAdmin.value == true\" value=\"true\">Admin</mat-radio-button>\r\n                <mat-radio-button [checked]=\"isAdmin.value == false\" value=\"false\">Customer</mat-radio-button>\r\n              </mat-radio-group>\r\n              <mat-error *ngIf=\"isAdmin.touched && isAdmin.invalid\">\r\n                <mat-error *ngIf=\"isAdmin.errors.required\">\r\n                    Is the user an admin?\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput placeholder=\"Username:\" formControlName=\"username\"  required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"username.touched && username.invalid\">\r\n                <mat-error *ngIf=\"username.errors.required\">\r\n                    Username is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.errors.minlength\">\r\n                    Username must be {{username.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-form-field appearance='outline' >\r\n                <input matInput placeholder=\"Wallet:\" formControlName=\"wallet\" type=\"number\" required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"wallet.touched && wallet.invalid\">\r\n                <mat-error *ngIf=\"wallet.errors.required\">\r\n                    wallet is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"wallet.errors.min\">\r\n                Ammount must be greater than {{wallet.errors.min.min}} \r\n                </mat-error>\r\n            </mat-error>\r\n\r\n\r\n\r\n            <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Edit User</button>\r\n        </form>\r\n    \r\n    </mat-card>\r\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CustomerService } from 'src/app/customer.service';\r\nimport Swal from 'sweetalert2';\r\nimport { RegisterService } from 'src/app/register.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  form:FormGroup = new FormGroup({});\r\n  ngOnInit(): void {\r\n  }\r\n  constructor(\r\n    private service:RegisterService,\r\n    public loaderService: LoaderService,\r\n    public fb: FormBuilder,\r\n    ) { \r\n      this.form = this.fb.group({\r\n        \"username\": ['',[Validators.required, Validators.minLength(5)]],\r\n        \"email\": new FormControl(null,[Validators.required, this.emailChecked]),\r\n      \"password\": new FormControl(null,[Validators.required, Validators.minLength(8),\r\n       Validators.pattern(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]))/g)]),\r\n      })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\nemailChecked(control){\r\n  if(control.value !=null){\r\n    var regexp = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\r\n    if(regexp.test(control.value) !==true){\r\n      return{\r\n        emailValidity:true\r\n      } \r\n    }\r\n  }\r\n}\r\n\r\nget password() {\r\n  return this.form.get('password')\r\n}\r\n\r\nget email() {\r\n  return this.form.get('email')\r\n}\r\n\r\n    get username(){\r\n      return this.form.get('username')\r\n    }\r\n \r\n\r\n  onSubmit(form){\r\n    console.log(form)\r\n    this.service.register(this.form.value).subscribe(\r\n      response => {\r\n        // console.log(response)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'User has been created',\r\n          showConfirmButton: false,\r\n          timer: 4000\r\n        });\r\n        setTimeout(() => {\r\n          this.form.reset();\r\n        }, 5000);\r\n      }\r\n    )\r\n  }\r\n}","   <app-administration>\r\n   <br><br><br><br>\r\n<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"login-wrapper\" fxLayoutAlign=\"center center\" *ngIf=\"!(loaderService.isLoading | async)\">\r\n    <mat-card class=\"box\">\r\n      <mat-card-header>\r\n        <!-- <mat-card-title>Add Customer</mat-card-title> -->\r\n      </mat-card-header>\r\n      <form class=\"example-form\"  [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form)\">\r\n        <mat-card-content>\r\n          <label>Username</label>\r\n          <mat-form-field appearance='outline' class=\"example-full-width\" >\r\n            <input matInput placeholder=\"Username\" formControlName=\"username\" type=\"text\" required>\r\n            <mat-icon matPrefix>\r\n              person\r\n              </mat-icon>\r\n          </mat-form-field>\r\n          <div class=\"err\" *ngIf=\"form.get('username').touched && form.get('username').invalid\">\r\n            <span *ngIf=\"form.controls.username.errors.username\">\r\n                *Invalid Username\r\n            </span>\r\n            <span *ngIf=\"form.controls.username.errors.required\">\r\n              *Username is Required\r\n          </span>\r\n        </div>\r\n        <label>Email</label>\r\n        <mat-form-field appearance='outline' class=\"example-full-width\" >\r\n          <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" required>\r\n       <mat-icon matPrefix>email</mat-icon>\r\n        </mat-form-field>\r\n        <div class=\"err\" *ngIf=\"form.get('email').touched && form.get('email').invalid\">\r\n          <span *ngIf=\"form.controls.email.errors.email\">\r\n              *Invalid Email\r\n          </span>\r\n          <span *ngIf=\"form.controls.email.errors.required\">\r\n            *Email is Required\r\n        </span>\r\n      </div>\r\n      <label>Password</label>\r\n        <mat-form-field appearance='outline' class=\"example-full-width\">\r\n          <input matInput placeholder=\" Password\" formControlName=\"password\" type=\"password\" required [type]=\"hide ? 'password' : 'text'\">\r\n       <mat-icon matPrefix>lock</mat-icon>\r\n       <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n      </button>\r\n        </mat-form-field>\r\n        <div class=\"err\" *ngIf=\"form.get('password').touched && form.get('password').invalid\">\r\n         <span *ngIf=\"form.controls.password.errors.password\">\r\n             *Invalid Password\r\n         </span>\r\n         <span *ngIf=\"form.controls.password.errors.required\">\r\n          *Password is Required\r\n      </span>\r\n     </div>\r\n     \r\n        </mat-card-content>\r\n        <button mat-stroked-button color=\"accent\" type=\"submit\" [disabled]=\"!form.valid\" class=\"btn-block\">Submit</button>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {OmdbapiService} from '../../omdbapi.service';\r\nimport Swal from 'sweetalert2'\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport {SaveMoviesService} from '../../save-movies.service';\r\ninterface MovieDetails{\r\n  Title:string,\r\n  genre:string,\r\n  plot:string,\r\n  year:string,\r\n  poster:string,\r\n}\r\n@Component({\r\n  selector: 'app-add-movies',\r\n  templateUrl: './add-movies.component.html',\r\n  styleUrls: ['./add-movies.component.scss']\r\n})\r\n\r\nexport class AddMoviesComponent implements OnInit {\r\n\r\n  constructor(private omdbLookupservice:OmdbapiService,\r\n    private saveMoviesService:SaveMoviesService,\r\n    public loaderService: LoaderService) {  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  lookupOmdb(){\r\n     this.omdbLookupservice.find(this.searchTitle.value).subscribe(\r\n      response => {\r\n      this.movieDetails={...response}\r\n      this.title.setValue(this.movieDetails.Title)\r\n      this.genre.setValue(this.movieDetails.Genre)\r\n      this.plot.setValue(this.movieDetails.Plot)\r\n      this.year.setValue(this.movieDetails.Year)\r\n      this.poster.setValue(this.movieDetails.Poster)\r\n      this.searchForm.reset()\r\n    })\r\n  }\r\nonSubmit(){\r\n  this.saveMoviesService.save(this.form.value).subscribe(response=>{\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Movie has been added',\r\n      showConfirmButton: false,\r\n      timer: 4000\r\n    })\r\n  this.form.reset()\r\n  })\r\n}\r\n  searchForm = new FormGroup({\r\n    searchTitle: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n  }\r\n  )\r\n \r\n   movieDetails:any\r\n  form = new FormGroup({\r\n    title: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    genre: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    plot: new FormControl('', [\r\n       Validators.required,\r\n       Validators.minLength(2),\r\n    ]),\r\n    year: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    poster: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    numberInStock: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    dailyRentalRate: new FormControl('', [\r\n      Validators.required,\r\n      Validators.min(1),\r\n    ]),\r\n  }\r\n  )\r\n  \r\n\r\n  get searchTitle() {\r\n    return this.searchForm.get('searchTitle')\r\n  }\r\n  //form\r\n  get genre() {\r\n    return this.form.get('genre')\r\n  }\r\n  get plot() {\r\n    return this.form.get('plot')\r\n  }\r\n  get year() {\r\n    return this.form.get('year')\r\n  }\r\n  get poster() {\r\n    return this.form.get('poster')\r\n  }\r\n  get numberInStock() {\r\n    return this.form.get('numberInStock')\r\n  }\r\n  get dailyRentalRate() {\r\n    return this.form.get('dailyRentalRate')\r\n  }\r\n  get title() {\r\n    return this.form.get('title')\r\n  }\r\n}\r\n\r\n\r\n//j\r\n\r\n\r\n// Actors: \"Mike Myers, Eddie Murphy, Cameron Diaz, John Lithgow\"\r\n// Awards: \"Won 1 Oscar. Another 39 wins & 60 nominations.\"\r\n// BoxOffice: \"$267,665,011\"\r\n// Country: \"USA, Japan\"\r\n// DVD: \"25 Nov 2015\"\r\n// Director: \"Andrew Adamson, Vicky Jenson\"\r\n// Genre: \"Animation, Adventure, Comedy, Family, Fantasy\"\r\n// Language: \"English\"\r\n// Metascore: \"84\"\r\n// Plot: \"A mean lord exiles fairytale creatures to the swamp of a grumpy ogre, who must go on a quest and rescue a princess for the lord in order to get his land back.\"\r\n// Poster: \"https://m.media-amazon.com/images/M/MV5BOGZhM2FhNTItODAzNi00YjA0LWEyN2UtNjJlYWQzYzU1MDg5L2ltYWdlL2ltYWdlXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\r\n// Production: \"DreamWorks SKG, Pacific Data Images (PDI)\"\r\n// Rated: \"PG\"\r\n// Ratings: (3) [{…}, {…}, {…}]\r\n// Released: \"18 May 2001\"\r\n// Response: \"True\"\r\n// Runtime: \"90 min\"\r\n// Title: \"Shrek\"\r\n// Type: \"movie\"\r\n// Website: \"N/A\"\r\n// Writer: \"William Steig (based upon the book by), Ted Elliott, Terry Rossio, Joe Stillman, Roger S.H. Schulman, Cody Cameron (additional dialogue), Chris Miller (additional dialogue), Conrad Vernon (additional dialogue)\"\r\n// Year: \"2001\"\r\n// imdbID: \"tt0126029\"\r\n// imdbRating: \"7.8\"\r\n// imdbVotes: \"620,107\"","\r\n  <app-administration>\r\n<br><br><br><br>\r\n<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<main class=\"container\"  *ngIf=\"!(loaderService.isLoading | async)\">\r\n  <section  class=\"search-container\">\r\n  <mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n    <form  [formGroup]=\"searchForm\" (ngSubmit)=\"lookupOmdb()\">\r\n      <div>Find Movie</div>\r\n      <mat-form-field appearance='outline'>\r\n        <input matInput placeholder=\"Title:\" formControlName=\"searchTitle\"  required>\r\n      </mat-form-field>\r\n      <mat-error *ngIf=\"searchTitle.touched && searchTitle.invalid\">\r\n        <mat-error *ngIf=\"searchTitle.errors.required\">\r\n          Title is required\r\n        </mat-error>\r\n        <mat-error *ngIf=\"searchTitle.errors.minlength\">\r\n          Title must be {{searchTitle.errors.minlength.requiredLength}} characters or more\r\n        </mat-error>\r\n      </mat-error>\r\n      \r\n      <button mat-flat-button color=\"primary\" [disabled]=\"!searchForm.valid\"  type=\"submit\">Find Movie</button>\r\n    </form>\r\n  </mat-card>\r\n</section>\r\n<br>\r\n<br>\r\n  <section class=\"form-details\">\r\n    <mat-card *ngIf=\"movieDetails\" class=\"movie-details mat-elevation-z24\" >\r\n      <mat-card-header>\r\n        <mat-card-title>{{movieDetails.Title}}</mat-card-title>\r\n        <mat-card-subtitle>{{movieDetails.Genre}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <img mat-card-image src=\"{{movieDetails.Poster}}\" alt=\"{{movieDetails.Title}}\">\r\n      <mat-card-content>\r\n        <p>\r\n          {{movieDetails.Plot}}\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <div class=\"form\">\r\n      <mat-card class=\"mat-elevation-z24\">\r\n        <mat-card-title> Add Movie</mat-card-title>\r\n        <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n          <mat-form-field appearance='outline'>\r\n            <input matInput type=\"title\" formControlName=\"title\" placeholder=\"Title:\" required>\r\n          </mat-form-field>\r\n          <mat-error *ngIf=\"title.touched && title.invalid\">\r\n            <mat-error *ngIf=\"title.errors.required\">\r\n              Title is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"title.errors.title\">\r\n              Title must have a valid format\r\n            </mat-error>\r\n            <mat-error *ngIf=\"title.errors.minlength\">\r\n              Title must be {{title.errors.minlength.requiredLength}} characters or\r\n              more\r\n            </mat-error>\r\n          </mat-error>\r\n          <mat-form-field appearance='outline'>\r\n            <input matInput placeholder=\"Genre:\" formControlName=\"genre\" required>\r\n          </mat-form-field>\r\n          <mat-error *ngIf=\"genre.touched && genre.invalid\">\r\n            <mat-error *ngIf=\"genre.errors.required\">\r\n              Genre is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"genre.errors.minlength\">\r\n              Genre must be {{genre.errors.minlength.requiredLength}} characters or more\r\n            </mat-error>\r\n          </mat-error>\r\n          <mat-form-field appearance='outline'>\r\n            <textarea matInput placeholder=\"Plot:\" formControlName=\"plot\" cdkTextareaAutosize ></textarea>\r\n          </mat-form-field>\r\n          <mat-form-field appearance='outline'>\r\n            <input matInput placeholder=\"Year:\" formControlName=\"year\">\r\n          </mat-form-field>\r\n          <mat-form-field appearance='outline'>\r\n            <input matInput placeholder=\"Poster:\" formControlName=\"poster\">\r\n          </mat-form-field>\r\n          <mat-form-field appearance='outline'>\r\n            <input matInput placeholder=\"Number in stock:\" formControlName=\"numberInStock\"  type=\"number\"  required>\r\n          </mat-form-field>\r\n          <mat-error *ngIf=\"numberInStock.touched && numberInStock.invalid\">\r\n            <mat-error *ngIf=\"numberInStock.errors.required\">\r\n              Number in stock is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"numberInStock.errors.minlength\">\r\n              Number in stock must be {{numberInStock.errors.minlength.requiredLength}} characters or more\r\n            </mat-error>\r\n          </mat-error>\r\n\r\n          <mat-form-field appearance='outline'>\r\n            <input matInput placeholder=\"Daily Rental Rate (&#8373;):\" formControlName=\"dailyRentalRate\"  type=\"number\"  required>\r\n          </mat-form-field>\r\n          <mat-error *ngIf=\"dailyRentalRate.touched && dailyRentalRate.invalid\">\r\n            <mat-error *ngIf=\"dailyRentalRate.errors.required\">\r\n              Daily Rent is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"dailyRentalRate.errors.minlength\">\r\n              Daily Rent must be {{dailyRentalRate.errors.minlength.requiredLength}} characters or more\r\n            </mat-error>\r\n          </mat-error>\r\n          <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Add New Movie</button>\r\n        </form>\r\n      </mat-card>\r\n    </div>\r\n  </section>\r\n\r\n</main>\r\n</app-administration>","import { Injectable } from '@angular/core';\r\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SaveMoviesService {\r\n  private url = \"https://vhsrentals.herokuapp.com/api/movies/add-movie\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  save(movie) {\r\n    return this.http.post(this.url, movie, this.httpOptions)\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport {RegisterService} from '../../register.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  hide = true;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private service:RegisterService,\r\n    public loaderService: LoaderService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit(){\r\n    this.disableConfirmPassword()\r\n    // let data = this.formatDataForEndPoint();\r\n    this.service.register(this.form.value).subscribe(\r\n      response => {\r\n        // this.openDialog()\r\n        console.log(response)\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Registration successfull',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        })\r\n        setTimeout(() => {\r\n          this.router.navigate(['/login']);\r\n        }, 5000)\r\n       \r\n      }, (error: Response) => {\r\n        // this.dialog.open(FormErrorComponent,{data:{message:\"test\"}})\r\n        if (error.status === 404) {\r\n          alert(\"Signup unsuccessful \")\r\n        } else {\r\n          if (error.status === 201) {\r\n            this.form.setErrors(error.json())\r\n          } else {\r\n            alert('An unexpected error occurred:' + error)\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n  disableConfirmPassword() {\r\n    this.form.get('confirmpassword').disable({ onlySelf: true });\r\n    this.form.updateValueAndValidity();\r\n  }\r\n  form = new FormGroup({\r\n    wallet: new FormControl('200'),\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.email,\r\n      Validators.minLength(5)\r\n    ]),\r\n    username: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5)\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      Validators.pattern(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]))/g)\r\n      //at least 1 digit ,at least one lowercase char , at lease 1 uppercase char and one special char\r\n    ]),\r\n    confirmpassword: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      Validators.pattern(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]))/g)\r\n      //at least 1 digit ,at least one lowercase char , at lease 1 uppercase char and one special char\r\n    ]),\r\n  })\r\n\r\n  get email() {\r\n    return this.form.get('email')\r\n  }\r\n  get username() {\r\n    return this.form.get('username')\r\n  }\r\n  get password() {\r\n    return this.form.get('password')\r\n  }\r\n  get confirmpassword() {\r\n    return this.form.get('confirmpassword')\r\n  }\r\n}\r\n","<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n    <mat-spinner style=\"top: 50%; left: 50%;\"></mat-spinner>\r\n  </div>\r\n  <div class=\"register-bg-image\">\r\n<main class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"!(loaderService.isLoading | async)\">\r\n    <mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n        <mat-card-title> VHS RENTALS REGISTRATION FORM</mat-card-title>\r\n        <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance='outline'  class=\"example-full-width\" >\r\n                <input matInput type=\"email\" formControlName=\"email\" placeholder=\"Email:\" required>\r\n                <mat-icon matPrefix>\r\n                    email\r\n                    </mat-icon>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"email.touched && email.invalid\">\r\n                <mat-error *ngIf=\"email.errors.required\">\r\n                    Email is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.errors.email\">\r\n                    Email must have a valid format\r\n                </mat-error>\r\n                <mat-error *ngIf=\"email.errors.minlength\">\r\n                    Email must be {{email.errors.minlength.requiredLength}} characters or\r\n                    more\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <mat-form-field appearance='outline'  class=\"example-full-width\" >\r\n                <input matInput placeholder=\"Username:\" formControlName=\"username\"  required>\r\n             <mat-icon matPrefix>person</mat-icon>\r\n\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"username.touched && username.invalid\">\r\n                <mat-error *ngIf=\"username.errors.required\">\r\n                    Username is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"username.errors.minlength\">\r\n                    Username must be {{username.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <mat-form-field appearance='outline'  class=\"example-full-width\" >\r\n                <input matInput placeholder=\"Password:\" formControlName=\"password\" required type=\"password\">\r\n                <mat-icon matPrefix>lock</mat-icon>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"password.touched && password.invalid\">\r\n                <mat-error *ngIf=\"password.errors.required\">\r\n                    Password is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.errors.minlength\">\r\n                    Password must be {{password.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n                <mat-error *ngIf=\"password.errors.pattern\">\r\n                    <p>\r\n                        Password must contain at least one digit.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one lowercase letter.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one uppercase letter.\r\n                    </p>\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"password.touched && confirmpassword.touched && confirmpassword.value !== password.value\">\r\n                <mat-error>\r\n                    Passwords should match\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <mat-form-field appearance='outline'  class=\"example-full-width\" >\r\n                <input matInput placeholder=\"Password (confirm):\" formControlName=\"confirmpassword\" required\r\n                    type=\"password\">\r\n                    <mat-icon matPrefix>lock</mat-icon>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"confirmpassword.touched && confirmpassword.invalid\">\r\n                <mat-error *ngIf=\"confirmpassword.errors.required\">\r\n                    Confirmation password is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"confirmpassword.errors.minlength\">\r\n                    Password must be {{confirmpassword.errors.minlength.requiredLength}} characters or more\r\n                </mat-error>\r\n                <mat-error *ngIf=\"confirmpassword.errors.pattern\">\r\n                    <p>\r\n                        Password must contain at least one digit.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one lowercase letter.\r\n                    </p>\r\n                    <p>\r\n                        Password must contain at least one uppercase letter.\r\n                    </p>\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"password.touched && confirmpassword.touched && confirmpassword.value !== password.value\">\r\n                <mat-error>\r\n                    Passwords should match\r\n                </mat-error>\r\n            </mat-error>\r\n\r\n            <button mat-stroked-button color=\"accent\" [disabled]=\"!form.valid\" type=\"submit\">SIGN UP</button>\r\n        </form>\r\n         <p>Already have an account? <a mat-button routerLink='/login' color='primary'>login</a></p>\r\n    </mat-card>\r\n</main>\r\n\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'VHS-Rental';\n}\n","<!-- <app-nav-bar></app-nav-bar> -->\r\n<router-outlet></router-outlet>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { GetMoviesService } from '../get-movies.service';\r\nimport { UserService } from '../user.service';\r\n@Component({\r\n  selector: 'app-edit-rental',\r\n  templateUrl: './edit-rental.component.html',\r\n  styleUrls: ['./edit-rental.component.scss']\r\n})\r\nexport class EditRentalComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef:MatDialogRef<EditRentalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private userservice: UserService,\r\n    private moviesservice: GetMoviesService \r\n  ) { }\r\nusers\r\nmovies\r\n  ngOnInit(): void {\r\n    this.userservice.fetchUsers().subscribe(response => {\r\n      this.users = response\r\n      this.moviesservice.fetchMovies().subscribe(response => {\r\n        this.movies = response\r\n        this.userId.setValue(this.data.user._id)\r\n        this.movieId.setValue(this.data.movie._id)\r\n          \r\n      })\r\n    })\r\n\r\n  }\r\n  form = new FormGroup({\r\n    userId: new FormControl(this.data.user._id, [\r\n      Validators.required,\r\n   \r\n    ]),\r\n    movieId: new FormControl('', [\r\n      Validators.required,\r\n\r\n    ]),\r\n    daysBooked: new FormControl('', [\r\n      Validators.required,\r\n      Validators.min(1)\r\n    ]),\r\n    total: new FormControl('', [\r\n      Validators.required,\r\n  \r\n    ]),\r\n\r\n  })\r\n\r\n  get movieId() {\r\n    return this.form.get('movieId')\r\n  }\r\n  get userId() {\r\n    return this.form.get('userId')\r\n  }\r\n  get daysBooked() {\r\n    return this.form.get('daysBooked')\r\n  }\r\n  get total() {\r\n    return this.form.get('total')\r\n  }\r\n\r\n  onSubmit(){\r\n    console.log(this.form.value)\r\n  }\r\n  onUpdate(){\r\n    this.userservice.updateUser(this.data._id,this.form.value).subscribe(response=>{\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'User details have been edited',\r\n        showConfirmButton: false,\r\n        timer: 4000\r\n        })\r\n    \r\n    })\r\n    this.form.reset() \r\n    this.onClose()\r\n  }\r\n  onClose(){\r\n    this.form.reset()\r\n    this.dialogRef.close()\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n    <mat-card-title>Edit Rental</mat-card-title>\r\n\r\n    <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Rentee username</mat-label>\r\n            <mat-select     [formControl]=\"userId\">\r\n              <mat-option *ngFor=\"let user of users\" [value]=\"user._id\">\r\n                {{user.username}}\r\n              </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n            <mat-error *ngIf=\"userId.touched && userId.invalid\">\r\n                <mat-error *ngIf=\"userId.errors.required\">\r\n                    Please select the username of customer\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Movie Title</mat-label>\r\n                <mat-select     [formControl]=\"movieId\">\r\n                  <mat-option *ngFor=\"let movie of movies\" [value]=\"movie._id\">\r\n                    {{movie.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"movieId.touched && movieId.invalid\">\r\n                    <mat-error *ngIf=\"movieId.errors.required\">\r\n                        Movie is required\r\n                    </mat-error>\r\n                </mat-error>\r\n                <mat-form-field appearance='outline' >\r\n                    <input matInput placeholder=\"Rental Period in days:\" formControlName=\"daysBooked\" type=\"number\" required>\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"daysBooked.touched && daysBooked.invalid\">\r\n                    <mat-error *ngIf=\"daysBooked.errors.required\">\r\n                    Rntal period is required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"daysBooked.errors.min\">\r\n                        Min value allowed is 1\r\n                    </mat-error>\r\n                </mat-error>\r\n\r\n        <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Rent Movie</button>\r\n    </form>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-record',\r\n  templateUrl: './delete-record.component.html',\r\n  styleUrls: ['./delete-record.component.scss']\r\n})\r\nexport class DeleteRecordComponent implements OnInit {\r\n  public dialogRef:MatDialogRef<DeleteRecordComponent>\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<section class=\"form-container\">\r\n<h2 mat-dialog-title>Delete record?</h2>\r\n<mat-dialog-content> This action cannot be undone</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-raised-button mat-dialog-close>Cancel</button>\r\n  <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\">Delete</button>\r\n</mat-dialog-actions>\r\n</section>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { UserService } from '../user.service';\r\n@Component({\r\n  selector: 'app-edit-wallet',\r\n  templateUrl: './edit-wallet.component.html',\r\n  styleUrls: ['./edit-wallet.component.scss']\r\n})\r\nexport class EditWalletComponent implements OnInit {\r\n\r\n \r\n  constructor(\r\n    public dialogRef:MatDialogRef<EditWalletComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private userservice:UserService  \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.email.setValue(this.data.email)\r\n    this.username.setValue(this.data.username)\r\n    this.isAdmin.setValue(this.data.isAdmin)\r\n    this.wallet.setValue(this.data.wallet)\r\n  }\r\n  form = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.email,\r\n      Validators.minLength(5)\r\n    ]),\r\n    username: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5)\r\n    ]),\r\n    isAdmin: new FormControl('false', [\r\n      Validators.required, \r\n    ]),\r\n    wallet: new FormControl('false', [\r\n      Validators.required,\r\n      Validators.min(0) \r\n    ]),\r\n  })\r\n \r\n  get email() {\r\n    return this.form.get('email')\r\n  }\r\n  get username() {\r\n    return this.form.get('username')\r\n  }\r\n  get isAdmin() {\r\n    return this.form.get('isAdmin')\r\n  }\r\n  get wallet() {\r\n    return this.form.get('wallet')\r\n  }\r\n  onUpdate(){\r\n    this.userservice.updateUser(this.data._id,this.form.value).subscribe(response=>{\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'Wallet has been updated',\r\n        showConfirmButton: false,\r\n        timer: 4000\r\n        })\r\n    \r\n    })\r\n    this.form.reset() \r\n    this.onClose()\r\n  }\r\n  onClose(){\r\n    this.form.reset()\r\n    this.dialogRef.close()\r\n  }\r\n}\r\n","<main class=\"container\">\r\n    <mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n        <mat-card-title> Edit Wallet</mat-card-title>\r\n\r\n        <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onUpdate()\">\r\n            <mat-form-field appearance='outline'>\r\n                {{username.value}}\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline'>\r\n                <input matInput placeholder=\"Wallet:\" formControlName=\"wallet\" type=\"number\" required>\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"wallet.touched && wallet.invalid\">\r\n                <mat-error *ngIf=\"wallet.errors.required\">\r\n                    wallet is required\r\n                </mat-error>\r\n                <mat-error *ngIf=\"wallet.errors.min\">\r\n                    Ammount must be greater than {{wallet.errors.min.min}}\r\n                </mat-error>\r\n            </mat-error>\r\n            <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Edit Wallet</button>\r\n        </form>\r\n\r\n    </mat-card>\r\n</main>","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport  {AngularMaterialModule} from './angular-material.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './screens/login/login.component';\r\nimport { RegisterComponent } from './screens/register/register.component';\r\nimport { MoviesComponent } from './Admins/movies/movies.component';\r\nimport { RentalsComponent } from './Admins/rentals/rentals.component';\r\nimport { ReturnsComponent } from './users/returns/returns.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { AddMoviesComponent } from './Admins/add-movies/add-movies.component';\r\nimport { CustomerComponent } from './Admins/customer/customer.component';\r\nimport { NoPageFoundComponent } from './screens/no-page-found/no-page-found.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './loader/interceptor.service';\r\nimport { MovieDetailsComponent } from './Admins/movie-details/movie-details.component';\r\nimport { EditMovieComponent } from './edit-movie/edit-movie.component';\r\nimport { DeleteRecordComponent } from './delete-record/delete-record.component';\r\nimport { AdministrationComponent } from './Admins/administration/administration.component';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { StoreFrontComponent } from './store-front/store-front.component';\r\nimport { RentMovieComponent } from './rent-movie/rent-movie.component';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { EditRentalComponent } from './edit-rental/edit-rental.component';\r\nimport { AddRentalComponent } from './add-rental/add-rental.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { EditWalletComponent } from './edit-wallet/edit-wallet.component';\r\n// import { MdbModule } from 'mdb-angular-ui-kit';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    MoviesComponent,\r\n    RentalsComponent,\r\n    ReturnsComponent,\r\n    NavBarComponent,\r\n    AddMoviesComponent,\r\n    CustomerComponent,\r\n    NoPageFoundComponent,\r\n    MovieDetailsComponent,\r\n    EditMovieComponent,\r\n    DeleteRecordComponent,\r\n    AdministrationComponent,\r\n    FooterComponent,\r\n    StoreFrontComponent,\r\n    RentMovieComponent,\r\n    CheckOutComponent,\r\n    UserComponent,\r\n    EditUserComponent,\r\n    AddUserComponent,\r\n    EditRentalComponent,\r\n    AddRentalComponent,\r\n    WalletComponent,\r\n    EditWalletComponent,\r\n\r\n    // MainNavComponent\r\n  \r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA,  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AngularMaterialModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    // AngularMaterialModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    NgxSpinnerModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 4000,\r\n      progressBar: true,\r\n      preventDuplicates: true,\r\n      progressAnimation: 'decreasing'\r\n    }),\r\n   MatProgressBarModule,\r\n  //  MdbModule \r\n  ],\r\n\r\n  providers: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n       useClass: InterceptorService, \r\n       multi: true\r\n      }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-returns',\n  templateUrl: './returns.component.html',\n  styleUrls: ['./returns.component.scss']\n})\nexport class ReturnsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<user-dashboard>\r\n    \r\n</user-dashboard>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private url = \"https://vhsrentals.herokuapp.com/api/auth\";\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private router : Router) { }\n\n  \n\n  userLogin(data): Observable<any> {\n    return this.http.post(this.url, data, this.httpOptions)\n  };\n\n  \n  isAuthenticated() {\n    // get the auth token from localStorage\n    let users = localStorage.getItem('token');\n    \n    // check if token is set, then...\n    if (users) {\n        return true;   \n    }\n    return false;  \n}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"main-footer\">\n    <!-- Copyright -->\n    <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n      © 2021 Copyright:\n      <a class=\"text-dark\" href=\"#\">Donald & Jocelyn</a>\n    </div>\n    <!-- Copyright -->\n  </footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-page-found',\n  templateUrl: './no-page-found.component.html',\n  styleUrls: ['./no-page-found.component.scss']\n})\nexport class NoPageFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section fxLayout=\"column wrap\" fxLayoutGap=\"60px\" fxLayoutAlign=\"center center\">\n    <div fxFlex>\n      404 We are searching for your page...\n    </div>\n    <div fxFlex>\n      <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </div>\n    <div fxFlex>\n      ... But we can not find it.\n    </div>\n  </section>\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteMovieService {\r\n  private url =\"https://vhsrentals.herokuapp.com/api/movies/delete-movie/\"\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n  \r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  deleteMovie(id) {\r\n    return this.http.delete(this.url+id,this.httpOptions,)\r\n  };\r\n  }\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from '../../login.service'\r\nimport Swal from 'sweetalert2'\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  reactiveForm:FormGroup;\r\n  hide = true;\r\n \r\n  constructor(\r\n    private LoginService: LoginService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public fb: FormBuilder,\r\n    public loaderService: LoaderService\r\n  ) { \r\n    this.reactiveForm = this.fb.group({\r\n      \"email\": new FormControl(null,[Validators.required, this.emailChecked]),\r\n      \"password\": new FormControl(null,[Validators.required, Validators.minLength(8),\r\n         Validators.pattern(/((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]))/g)]),\r\n    })\r\n  }\r\n\r\n \r\n\r\n  emailChecked(control){\r\n    if(control.value !=null){\r\n      var regexp = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')\r\n      if(regexp.test(control.value) !==true){\r\n        return{\r\n          emailValidity:true\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  get password() {\r\n    return this.reactiveForm.get('password')\r\n  }\r\n\r\n  get email() {\r\n    return this.reactiveForm.get('email')\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  this.signOut()\r\n  }\r\n  signOut(){\r\n    if(localStorage.getItem(\"token\")){\r\n      localStorage.removeItem(\"token\")\r\n    }\r\n    if(localStorage.getItem(\"id\")){\r\n      localStorage.removeItem(\"id\")\r\n    }\r\n    if(localStorage.getItem(\"email\")){\r\n      localStorage.removeItem(\"email\")\r\n    }\r\n    if(localStorage.getItem(\"username\")){\r\n      localStorage.removeItem(\"username\")\r\n    }\r\n    if(localStorage.getItem(\"isAdmin\")){\r\n      localStorage.removeItem(\"isAdmin\")\r\n    }\r\n    if(localStorage.getItem(\"wallet\")){\r\n      localStorage.removeItem(\"wallet\")\r\n    }\r\n  }\r\n\r\n  private helper = new JwtHelperService();\r\n\r\n\r\n  private getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  private decodeToken() {\r\n    return this.getToken() ? this.helper.decodeToken(this.getToken()) : null;\r\n  }\r\n\r\n  userData(): boolean {\r\n    if (!this.decodeToken()) return null;\r\n    const { isAdmin} = this.decodeToken();\r\n    return isAdmin as boolean;\r\n  }\r\n upLoad(reactiveForm){\r\n   if (reactiveForm.valid){\r\n    this.LoginService.userLogin(this.reactiveForm.value).subscribe(\r\n      response => {\r\n   if (response.hasOwnProperty(\"token\")) {\r\n  localStorage.setItem(\"token\", response['token']);\r\n  localStorage.setItem(\"id\", response[\"id\"]);\r\n  localStorage.setItem('email',response['email']);\r\n  localStorage.setItem('username',response['username']);\r\n  localStorage.setItem('isAdmin', this.userData().toString());\r\n  localStorage.setItem('wallet', response['wallet'] );\r\n\r\n\r\nconsole.log(response)\r\n  Swal.fire({\r\n    position: 'center',\r\n    icon: 'success',\r\n    title: 'Login is successful, Welcome!!',\r\n    showConfirmButton: false,\r\n    timer:2000\r\n  }),\r\n  setTimeout(() => {\r\n    this.reactiveForm.reset();\r\n    // console.log(this.userData());\r\n    if(this.userData() == true){\r\n    this.router.navigate(['/admin']);\r\n    }else \r\n   {this.router.navigate(['/store']);}\r\n  }, 2000);\r\n};\r\n    },\r\n      err => {\r\n        console.log(err)\r\n        if (err.error) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            title: 'Something went wrong or Incorrect Password or Email',\r\n            showConfirmButton: false,\r\n            timer: 3000\r\n          })\r\n        }\r\n      }\r\n    )\r\n   }\r\n }\r\n\r\n}\r\n","\n<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\n  <mat-spinner style=\"top: 50%; left: 50%;\"></mat-spinner>\n</div>\n<div class=\"login-bg-image\">\n<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"!(loaderService.isLoading | async)\">\n    <mat-card class=\"box\">\n      <mat-card-header>\n        <mat-card-title>VHS RENTALS LOGIN FORM</mat-card-title>\n      </mat-card-header>\n      <form class=\"example-form\"  [formGroup]=\"reactiveForm\" (ngSubmit)=\"upLoad(reactiveForm)\">\n        <mat-card-content>\n          <mat-form-field appearance='outline' class=\"example-full-width\" >\n            <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"email\" required>\n         <mat-icon matPrefix>email</mat-icon>\n          </mat-form-field>\n          <div class=\"err\" *ngIf=\"reactiveForm.get('email').touched && reactiveForm.get('email').invalid\">\n            <span *ngIf=\"reactiveForm.controls.email.errors.email\">\n                *Invalid Email\n            </span>\n            <span *ngIf=\"reactiveForm.controls.email.errors.required\">\n              *Email is Required\n          </span>\n        </div>\n          <mat-form-field appearance='outline' class=\"example-full-width\">\n            <input matInput placeholder=\" Password\" formControlName=\"password\" type=\"password\" required [type]=\"hide ? 'password' : 'text'\">\n         <mat-icon matPrefix>lock</mat-icon>\n         <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n          </mat-form-field>\n          <div class=\"err\" *ngIf=\"reactiveForm.get('password').touched && reactiveForm.get('password').invalid\">\n           <span *ngIf=\"reactiveForm.controls.password.errors.password\">\n               *Invalid Password\n           </span>\n           <span *ngIf=\"reactiveForm.controls.password.errors.required\">\n            *Password is Required\n        </span>\n       </div>\n        </mat-card-content>\n        <button mat-stroked-button color=\"accent\" type=\"submit\" [disabled]=\"!reactiveForm.valid\" class=\"btn-block\">Log in</button>\n      </form>\n      <p>Don't have an account? <a mat-button routerLink='/register' color='primary'>Register</a></p>\n    </mat-card>\n  </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  private url = \"https://vhsrentals.herokuapp.com/api/users\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  register(data): Observable<any> {\r\n    return this.http.post(this.url, data, this.httpOptions)\r\n  };\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { EditMovieService } from '../edit-movie.service';\r\nimport { RentalService } from '../rental.service';\r\n\r\n@Component({\r\n  selector: 'app-check-out',\r\n  templateUrl: './check-out.component.html',\r\n  styleUrls: ['./check-out.component.scss']\r\n})\r\nexport class CheckOutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private rent:RentalService,\r\n    private update:EditMovieService,\r\n    private router: Router\r\n    ) {}\r\n  \r\n\r\n  cart\r\n  getTotal() {\r\n    this.setCart()\r\n    let result = 0\r\n    this.cart.forEach(element => {\r\n      console.log(element.daysBooked)\r\n      if (element.daysBooked) {\r\n        result += (element.dailyRentalRate * element.daysBooked)\r\n      } else {\r\n        result += element.dailyRentalRate\r\n      }\r\n    });\r\n    return result\r\n  }\r\n  setCart() {\r\n    this.cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n  }\r\n  removeMovie(id) {\r\n    this.cart.splice(this.cart.findIndex(movie => movie._id === id), 1);\r\n    localStorage.setItem(\"cart\", JSON.stringify(this.cart))\r\n  }\r\n\r\n\r\n  setNumberOfDays(id) {\r\n    let days = 0\r\n    if (parseInt((document.getElementById(`${id}`) as HTMLInputElement).value) < 1) {\r\n      days = 1\r\n    } else {\r\n      days = parseInt((document.getElementById(`${id}`) as HTMLInputElement).value)\r\n    }\r\n    let currentMovie = this.cart.findIndex(movie => movie._id === id)\r\n    //TODO add days Booked to scheme\r\n    this.cart[currentMovie].daysBooked = days\r\n    this.cart[currentMovie].dateOut = new Date()\r\n    localStorage.setItem(\"cart\", JSON.stringify(this.cart))\r\n    this.setCart()\r\n  }\r\n  processOrders(){\r\n    console.log(this.cart)\r\n     this.cart.forEach(element => {\r\n      let id=localStorage.getItem(\"id\")\r\n      let movieId:string=element._id+\"\"\r\n      //TODO change backend \r\n      // this.rent.rent({movie:{...element},customer:{...this.form.value},customerId:id,movieId:movieId}).subscribe(response=>{\r\n//         dailyRentalRate: 9\r\n// genre: \"Action, Crime, Drama, Thriller\"\r\n// numberInStock: 6\r\n// plot: \"Set within a year after the events of Batman Begins, Batman, Lieutenant James Gordon, and new district attorney Harvey Dent successfully begin to round up the criminals that plague Gotham City until a mysterious and sadistic criminal mastermind known only as the Joker appears in Gotham, creating a new wave of chaos. Batman's struggle against the Joker becomes deeply personal, forcing him to \\\"confront everything he believes\\\" and improve his technology to stop him. A love triangle develops between Bruce Wayne, Dent and Rachel Dawes.\"\r\n// poster: \"https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SX300.jpg\"\r\n// title: \"The Dark Knight\"\r\n// year: \"2008\"\r\n        this.rent.rent({userId:id,movieId:movieId}).subscribe(response=>{\r\n          console.log(response)\r\n    \r\n          })\r\n          let numberInStock=element.numberInStock-1\r\n          let movie=new FormData()\r\n          movie.set(\"genre\",element.genre)\r\n          movie.set(\"numberInStock\",numberInStock.toString())\r\n          movie.set(\"plot\",element.plot)\r\n          movie.set(\"poster\",element.poster)\r\n          movie.set(\"title\",element.title)\r\n          movie.set(\"year\",element.year)\r\n          \r\n      //     this.update.editMovies(element._id,movie).subscribe(result=>{\r\n      //       console.log(result)\r\n      //   Swal.fire({\r\n      //     position: 'center',\r\n      //     icon: 'success',\r\n      //     title: 'Your order has been processed',\r\n      //     showConfirmButton: false,\r\n      //     timer: 4000\r\n      //   })\r\n      // }\r\n\r\n      // )\r\n   });\r\n   localStorage.removeItem(\"cart\")\r\n   this.router.navigate(['/store']);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setCart()\r\n  }\r\n\r\n\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<main>\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar ></div>\r\n      <mat-card-title>Please confirm your order and tell us how to contact you</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Movie</th>\r\n            <th>Price per day(&#8373;) </th>\r\n            <th>Remove from cart</th>\r\n            <th>Rental period in days</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody >\r\n          <tr *ngFor=\"let item of cart\">\r\n            <td><i>{{item.title}}</i></td>\r\n            <td>{{item.dailyRentalRate}}</td>\r\n            <td>\r\n              <button class=\"remove-movie\" (click)=\"removeMovie(item._id)\">Remove</button>\r\n            </td>\r\n            <td>\r\n              <input (change)=\"setNumberOfDays(item._id)\" id=\"{{item._id}}\" min=\"1\"\r\n                value=\"{{item.daysBooked ? item.daysBooked :1 }}\" class=\"numOfDays\" type=\"number\" />\r\n\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n\r\n      <mat-divider></mat-divider>\r\n      <h2> Total = &#8373;{{getTotal()}}</h2>\r\n      <mat-divider></mat-divider>\r\n        <button mat-flat-button color=\"primary\" type=\"submit\" (click)=\"processOrders()\" class=\"btn-block\">Checkout</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</main>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddRentalComponent } from 'src/app/add-rental/add-rental.component';\r\nimport { DeleteRecordComponent } from 'src/app/delete-record/delete-record.component';\r\nimport { EditRentalComponent } from 'src/app/edit-rental/edit-rental.component';\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport { RentalsService } from 'src/app/rentals.service';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport interface RentalData {\r\n  user: object\r\n  movie: object\r\n  _id: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-rentals',\r\n  templateUrl: './rentals.component.html',\r\n  styleUrls: ['./rentals.component.scss']\r\n})\r\nexport class RentalsComponent implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n    this.setUpTable()\r\n    this.getRentals.allRentals().subscribe(response => { this.rentals = response })\r\n\r\n  }\r\n  setUpTable() {\r\n    this.getRentals.allRentals().subscribe(response => {\r\n      this.rentals = response\r\n      this.dataSource = new MatTableDataSource(this.rentals);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n\r\n    // this.userservice.fetchUsers().subscribe(response => {\r\n    //   this.users = response\r\n    //   this.dataSource = new MatTableDataSource(this.users);\r\n    //   this.dataSource.paginator = this.paginator;\r\n    //   this.dataSource.sort = this.sort;\r\n    // })\r\n  }\r\n  // [ { \"_id\": \"608928553f1dd300049cae09\", \"user\": { \"_id\": \"607deea316fb5419a848c72b\" }, \"movie\": { \"_id\": \"608173c8c18f36001558c8d5\", \"title\": \"Batman Begins\", \"dailyRentalRate\": 2 }, \"dateOut\": \"2021-04-28T09:18:13.609Z\" } ]\r\n\r\n  displayedColumns: string[] = ['username', 'movie-title', 'dailyRentalRate', 'dateOut', 'daysBooked', 'delete', 'edit'];\r\n  dataSource: MatTableDataSource<RentalData>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    public loaderService: LoaderService,\r\n    private getRentals: RentalsService,\r\n    public dialog: MatDialog\r\n\r\n\r\n  ) { }\r\n\r\n\r\n  rentals\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  deleteRental(id) {\r\n    let openDialog = this.dialog.open(DeleteRecordComponent)\r\n    this.dialog.getDialogById(openDialog.id).afterClosed().subscribe(result => {\r\n      if (result) {\r\n         this.getRentals.deleteRental(id).subscribe(() =>\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Record has been deleted',\r\n            showConfirmButton: false,\r\n            timer: 4000\r\n          })\r\n        )\r\n        this.setUpTable()\r\n      }\r\n    })\r\n  }\r\n\r\n  editRental(rental) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = rental\r\n    this.dialog.afterAllClosed.subscribe(() => { this.setUpTable() })\r\n    this.dialog.open(EditRentalComponent, dialogConfig)\r\n  }\r\n  onAddRental() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    this.dialog.afterAllClosed.subscribe(() => { this.setUpTable() })\r\n    this.dialog.open(AddRentalComponent, dialogConfig)\r\n  }\r\n\r\n\r\n\r\n}\r\n","<app-administration>\r\n\r\n    <div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n        <mat-spinner></mat-spinner>\r\n      </div>\r\n \r\n      <main>\r\n\r\n        <div class=\"mat-elevation-z8\">\r\n          <mat-form-field>\r\n            <mat-label>Filter</mat-label>\r\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Enter search query here\" #input>\r\n            <button mat-raised-button color=\"primary\" (click) =\"onAddRental()\" >\r\n              <mat-icon >add</mat-icon>\r\n              New Rental\r\n            </button>\r\n          </mat-form-field>\r\n          \r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        \r\n            <ng-container matColumnDef=\"username\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.user.username}} </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"movie-title\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Movie Title </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.movie.title}} </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"dailyRentalRate\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Daily Rental Rate </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.movie.dailyRentalRate}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"dateOut\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Out </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.dateOut}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"daysBooked\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Days Booked </th>\r\n              <td mat-cell *matCellDef=\"let row\"> {{row.daysBooked}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"delete\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete </th>\r\n              <td mat-cell *matCellDef=\"let row\"> <button mat-flat-button  (click)=\"deleteRental(row._id)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button> </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"edit\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n              <td mat-cell *matCellDef=\"let row\"> <button mat-flat-button  (click)=\"editRental(row)\">\r\n                  <mat-icon>edit</mat-icon>\r\n                </button> </td>\r\n            </ng-container>\r\n        \r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        \r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n        </div>\r\n        </main>\r\n</app-administration>","import { Component, OnInit } from '@angular/core';\r\nimport { GetMoviesService } from '../../get-movies.service';\r\nimport { Router } from '@angular/router';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { TooltipPosition } from '@angular/material/tooltip';\r\nimport { LoaderService } from 'src/app/loader/loader.service';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-movies',\r\n  templateUrl: './movies.component.html',\r\n  styleUrls: ['./movies.component.scss']\r\n})\r\nexport class MoviesComponent implements OnInit {\r\n\r\n  constructor(private getMovies: GetMoviesService,\r\n    public loaderService: LoaderService,private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n   this.setList()\r\n  }\r\n  setList()\r\n  {\r\n    this.getMovies.fetchMovies().subscribe(response => { this.movies = response, this.getList(0, 11) })\r\n\r\n  }\r\n  list=[]\r\n  movies;\r\n  length = 100;\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 25, 100];\r\n\r\n  pageEvent: PageEvent;\r\n  positionOptions: TooltipPosition[] = ['below', 'above', 'left', 'right'];\r\n  position = new FormControl(this.positionOptions[1]);\r\n  onPageEvent(event: PageEvent) {\r\n    const start = event.previousPageIndex * event.pageSize + 1\r\n    const limit = event.pageSize\r\n    this.getList(start, limit)\r\n  }\r\n  goToMovie(id){\r\n    this.router.navigate(['/movie' , id]);\r\n  }\r\n  getList(start: number, limit: number) {\r\n    let row = 1\r\n    let col = 1\r\n    let array = Object.values(this.movies)\r\n    this.length = array.length\r\n    this.list = []\r\n    for (let index = start; index < array.length && index <= limit; index++) {\r\n      this.list.push({ rows: row, cols: col, data: array[index] })\r\n      if (index % 3 == 0) {\r\n        row++\r\n      }\r\n      col = (col++) % 3\r\n    }\r\n  }\r\n}\r\n","<app-administration>\r\n<div *ngIf=\"loaderService.isLoading | async\" class=\"loader-container\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n\r\n<main>\r\n    <mat-grid-list *ngIf=\"list\" cols=\"4\" rowHeight=\"5:5\" [style.backgroundColor]=\"'lightgray'\">\r\n      <mat-grid-tile \r\n      *ngFor=\"let movieDetails of list\"\r\n       [colspan]=\"movieDetails.cols\"\r\n        gutterSize=\"1px\"\r\n        > \r\n\r\n        <span *ngIf=\"movieDetails\" class=\"movie-details\">    \r\n            <img \r\n            mat-card-image src=\"{{movieDetails.data.poster}}\"\r\n            alt=\"{{movieDetails.data.title}}\" \r\n       \r\n            (click)=\"goToMovie(movieDetails.data._id)\"\r\n            >\r\n        </span>\r\n\r\n      </mat-grid-tile>\r\n    \r\n    </mat-grid-list>\r\n \r\n    <mat-paginator *ngIf=\"list\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n    (page)=\"onPageEvent($event)\"\r\n    (change)=\"onPageEvent($event)\">\r\n    </mat-paginator>\r\n    </main>\r\n  </app-administration>\r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../user.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { GetMoviesService } from '../get-movies.service';\r\nimport { RentalService } from '../rental.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-rental',\r\n  templateUrl: './add-rental.component.html',\r\n  styleUrls: ['./add-rental.component.scss']\r\n})\r\nexport class AddRentalComponent implements OnInit {\r\n\r\n  constructor(private userservice: UserService,\r\n    private moviesservice: GetMoviesService,\r\n    private rent: RentalService) { }\r\n  users\r\n  movies\r\n  ngOnInit(): void {\r\n    this.userservice.fetchUsers().subscribe(response => this.users = response)\r\n    this.moviesservice.fetchMovies().subscribe(response => this.movies = response)\r\n\r\n  }\r\n  form = new FormGroup({\r\n    userId: new FormControl('', [\r\n      Validators.required,\r\n\r\n    ]),\r\n    movieId: new FormControl('', [\r\n      Validators.required,\r\n\r\n    ]),\r\n    daysBooked: new FormControl('', [\r\n      Validators.required,\r\n      Validators.min(1)\r\n    ]),\r\n    // total: new FormControl('', [\r\n    //   Validators.required,\r\n\r\n    // ]),\r\n\r\n  })\r\n\r\n  get movieId() {\r\n    return this.form.get('movieId')\r\n  }\r\n  get userId() {\r\n    return this.form.get('userId')\r\n  }\r\n  get daysBooked() {\r\n    return this.form.get('daysBooked')\r\n  }\r\n  // get total() {\r\n  //   return this.form.get('daysBooked')\r\n  // }\r\n\r\n  onSubmit() {\r\n\r\n    this.rent.rent(this.form.value).subscribe(response => {\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'Movie has been rented',\r\n        showConfirmButton: false,\r\n        timer: 4000\r\n      })\r\n    }\r\n\r\n    )\r\n\r\n    console.log(this.form.value)\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z24\" id=\"card\">\r\n    <mat-card-title>Rent Movie</mat-card-title>\r\n\r\n    <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Rentee username</mat-label>\r\n            <mat-select     [formControl]=\"userId\">\r\n              <mat-option *ngFor=\"let user of users\" [value]=\"user._id\">\r\n                {{user.username}}\r\n              </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n            <mat-error *ngIf=\"userId.touched && userId.invalid\">\r\n                <mat-error *ngIf=\"userId.errors.required\">\r\n                    Please select the username of customer\r\n                </mat-error>\r\n            </mat-error>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Movie Title</mat-label>\r\n                <mat-select     [formControl]=\"movieId\">\r\n                  <mat-option *ngFor=\"let movie of movies\" [value]=\"movie._id\">\r\n                    {{movie.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"movieId.touched && movieId.invalid\">\r\n                    <mat-error *ngIf=\"movieId.errors.required\">\r\n                        Movie is required\r\n                    </mat-error>\r\n                </mat-error>\r\n                <mat-form-field appearance='outline' >\r\n                    <input matInput placeholder=\"Rental Period in days:\" formControlName=\"daysBooked\" type=\"number\" required>\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"daysBooked.touched && daysBooked.invalid\">\r\n                    <mat-error *ngIf=\"daysBooked.errors.required\">\r\n                    Rntal period is required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"daysBooked.errors.min\">\r\n                        Min value allowed is 1\r\n                    </mat-error>\r\n                </mat-error>\r\n\r\n        <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Rent Movie</button>\r\n    </form>\r\n</mat-card>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { TextFieldModule } from '@angular/cdk/text-field';\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  TextFieldModule,\r\n  MatProgressBarModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ],\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n// import { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\nimport { Observable, of, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor(public loaderService: LoaderService, public toasterService: ToastrService ) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      this.loaderService.isLoading.next(true);\n      return next.handle(req).pipe(\n        finalize(\n          () => {\n            this.loaderService.isLoading.next(false)\n          catchError((err: any) => {\n              if(err instanceof HttpErrorResponse) {\n                  try {\n                      this.toasterService.error(err.error.message, err.error.title, { positionClass: 'toast-top-center' });\n                  } catch(e) {\n                      this.toasterService.error('An error occurred', '', { positionClass: 'toast-top-center' });\n                  } \n              }\n              return of(err);\n          });\n          }\n        )       \n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  public isLoading:BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n \n  constructor(private router: Router\n    , private LoginService: LoginService) {}\n\n  canActivate() {\n    // Check to see if a user has a valid token\n    if (this.LoginService.isAuthenticated()) {\n        // If they do, return true and allow the user to load app\n        return true;\n    }\n\n    // If not, they redirect them to the login page\n    this.router.navigate(['/login']);\n    return false;\n}\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { EditMovieService } from '../edit-movie.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-movie',\r\n  templateUrl: './edit-movie.component.html',\r\n  styleUrls: ['./edit-movie.component.scss']\r\n})\r\nexport class EditMovieComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef:MatDialogRef<EditMovieComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private editMovie:EditMovieService  \r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title.setValue(this.data.title)\r\n    this.genre.setValue(this.data.genre)\r\n    this.plot.setValue(this.data.plot)\r\n    this.year.setValue(this.data.year)\r\n    this.poster.setValue(this.data.poster)\r\n    this.numberInStock.setValue(this.data.numberInStock)\r\n    this.dailyRentalRate.setValue(this.data.dailyRentalRate)\r\n  }\r\n\r\n  form = new FormGroup({\r\n    title: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    genre: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    plot: new FormControl('', [\r\n       Validators.required,\r\n       Validators.minLength(2),\r\n    ]),\r\n    year: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    poster: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n    ]),\r\n    numberInStock: new FormControl('', [\r\n      Validators.required,\r\n    ]),\r\n    dailyRentalRate: new FormControl('', [\r\n      Validators.required,\r\n    ]),\r\n  }\r\n  )\r\n  \r\n  get genre() {\r\n    return this.form.get('genre')\r\n  }\r\n  get plot() {\r\n    return this.form.get('plot')\r\n  }\r\n  get year() {\r\n    return this.form.get('year')\r\n  }\r\n  get poster() {\r\n    return this.form.get('poster')\r\n  }\r\n  get numberInStock() {\r\n    return this.form.get('numberInStock')\r\n  }\r\n  get dailyRentalRate() {\r\n    return this.form.get('dailyRentalRate')\r\n  }\r\n  get title() {\r\n    return this.form.get('title')\r\n  }\r\n  onUpdate(){\r\n    this.editMovie.editMovies(this.data._id,this.form.value).subscribe(response=>{console.log(response)})\r\n    this.form.reset()\r\n    Swal.fire({\r\n    position: 'center',\r\n    icon: 'success',\r\n    title: 'Movie details have been edited',\r\n    showConfirmButton: false,\r\n    timer: 4000\r\n    })\r\n\r\n    this.onClose()\r\n  }\r\n  onClose(){\r\n    this.form.reset()\r\n    this.dialogRef.close()\r\n  }\r\n}\r\n","<form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"onUpdate()\">\r\n    <mat-form-field appearance='outline'>\r\n\r\n      <input matInput formControlName=\"title\" placeholder=\"Title:\" required>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"title.touched && title.invalid\">\r\n      <mat-error *ngIf=\"title.errors.required\">\r\n        Title is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"title.errors.title\">\r\n        Title must have a valid format\r\n      </mat-error>\r\n      <mat-error *ngIf=\"title.errors.minlength\">\r\n        Title must be {{title.errors.minlength.requiredLength}} characters or\r\n        more\r\n      </mat-error>\r\n    </mat-error>\r\n\r\n    <mat-form-field appearance='outline'>\r\n      <input matInput placeholder=\"Genre:\" formControlName=\"genre\" required>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"genre.touched && genre.invalid\">\r\n      <mat-error *ngIf=\"genre.errors.required\">\r\n        Genre is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"genre.errors.minlength\">\r\n        Genre must be {{genre.errors.minlength.requiredLength}} characters or more\r\n      </mat-error>\r\n    </mat-error>\r\n\r\n    <mat-form-field appearance='outline'>\r\n      <textarea matInput  placeholder=\"Plot:\"  formControlName=\"plot\" cdkTextareaAutosize ></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance='outline'>\r\n      <input matInput placeholder=\"Year:\" formControlName=\"year\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance='outline'>\r\n      <input matInput placeholder=\"Poster:\" formControlName=\"poster\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance='outline'>\r\n      <input matInput placeholder=\"Number in stock:\" formControlName=\"numberInStock\"  type=\"number\"  required>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"numberInStock.touched && numberInStock.invalid\">\r\n      <mat-error *ngIf=\"numberInStock.errors.required\">\r\n        Number in stock is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"numberInStock.errors.minlength\">\r\n        Number in stock must be {{numberInStock.errors.minlength.requiredLength}} characters or more\r\n      </mat-error>\r\n    </mat-error>\r\n\r\n    <mat-form-field appearance='outline'>\r\n      <input matInput placeholder=\"Daily Rental Rate:\" formControlName=\"dailyRentalRate\"  type=\"number\"  required>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"dailyRentalRate.touched && dailyRentalRate.invalid\">\r\n      <mat-error *ngIf=\"dailyRentalRate.errors.required\">\r\n        Daily Rent is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"dailyRentalRate.errors.minlength\">\r\n        Daily Rent must be {{dailyRentalRate.errors.minlength.requiredLength}} characters or more\r\n      </mat-error>\r\n    </mat-error>\r\n\r\n\r\n    <button mat-flat-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Edit Movie</button>\r\n  </form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './screens/login/login.component';\r\nimport { RegisterComponent } from './screens/register/register.component';\r\nimport { CustomerComponent } from './Admins/customer/customer.component';\r\nimport { RentalsComponent } from './Admins/rentals/rentals.component';\r\nimport {ReturnsComponent } from './users/returns/returns.component';\r\nimport { MoviesComponent } from './Admins/movies/movies.component';\r\nimport { NoPageFoundComponent } from './screens/no-page-found/no-page-found.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { AddMoviesComponent } from './Admins/add-movies/add-movies.component';\r\nimport { AdministrationComponent } from './Admins/administration/administration.component';\r\nimport { MovieDetailsComponent } from './Admins/movie-details/movie-details.component';\r\nimport { StoreFrontComponent } from './store-front/store-front.component';\r\nimport { CheckOutComponent } from './check-out/check-out.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  { path: 'login', component: LoginComponent },\r\n  { \r\n    path: 'users', \r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import('./users/users.module').then(m => m.UsersModule) \r\n  },\r\n  {\r\n    path: 'admin',\r\n    canActivate: [AuthGuard],\r\n    component: AdministrationComponent\r\n  },\r\n  { path: 'store', \r\n  canActivate: [AuthGuard],\r\n  component: StoreFrontComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'movies', canActivate: [AuthGuard], component: MoviesComponent },\r\n  { path: 'add-movies',  canActivate: [AuthGuard], component: AddMoviesComponent },\r\n  // { path: 'movies', component: MoviesComponent },\r\n  {path: \"movie/:id\",  canActivate: [AuthGuard], component: MovieDetailsComponent },\r\n  { path: 'customers',  canActivate: [AuthGuard], component: CustomerComponent },\r\n  { path: 'add-users', canActivate: [AuthGuard], component: CustomerComponent },\r\n  { path: 'view-users', canActivate: [AuthGuard], component: UserComponent },\r\n  { path: 'returns', canActivate: [AuthGuard], component: ReturnsComponent },\r\n  { path: 'rentals', canActivate: [AuthGuard], component: RentalsComponent },\r\n  { path: 'shopping-cart', canActivate: [AuthGuard], component: CheckOutComponent },\r\n  { path: 'wallet', canActivate: [AuthGuard], component: WalletComponent },\r\n  { path: '404', component: NoPageFoundComponent },\r\n  { path: '**', redirectTo: '/404', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RentalService {\r\n\r\n\r\n  private url = \"https://vhsrentals.herokuapp.com/api/rentals/\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  rent(movie) {\r\n    return this.http.post(this.url, movie, this.httpOptions)\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\r\n  private url = \"https://vhsrentals.herokuapp.com/api/users/\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  fetchUsers() {\r\n    return this.http.get(this.url,  this.httpOptions)\r\n  };\r\n  \r\n  deleteUser(id){\r\n    return this.http.delete(this.url+id, this.httpOptions)\r\n  }\r\n\r\n  updateUser(id, data) {\r\n    return this.http.put(this.url+id, data, this.httpOptions)\r\n  }\r\n\r\n  \r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RentalsService {\r\n\r\n\r\n  private url = \"https://vhsrentals.herokuapp.com/api/rentals/\";\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n      'x-auth-token':`${localStorage.getItem('token')}`\r\n\r\n    })\r\n  };\r\n  constructor(private http: HttpClient) { }\r\n  allRentals() {\r\n    return this.http.get(this.url,  this.httpOptions)\r\n  };\r\n\r\n  deleteRental(id){\r\n    return this.http.delete(this.url+id, this.httpOptions)\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}